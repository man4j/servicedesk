<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="ru-ru" xml:lang="ru-ru" class="no-feedback" data-mc-search-type="Stem" data-mc-help-system-file-name="HelpScripting.xml" data-mc-path-to-help-system="../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-toc-path="">
    <head>
        <meta charset="utf-8" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <style></style>
    </head>
    <body>
        <h1 data-mc-conditions="Default.HelpScripting">Скрипт для уточнения права в матрице прав</h1>
        <h3 data-mc-conditions="Default.HelpScripting"><a name="description"></a>Описание скрипта</h3>
        <p>Скрипт уточняет право на определенное действие, выданное профилю пользователя.</p>
        <p class="Subtitle">Когда выполняется скрипт:</p>
        <ul>
            <li value="1">При проверке наличия права в момент совершениия указанного действия с объектом.</li>
        </ul>
        <p class="Subtitle">Результат выполнения скрипта:</p>
        <p>Если скрипт возвращает "true" (верно), то пользователю выдаются права на указанное действие. 
</p>
        <p>Если "false" (ложь), то прав нет. </p>
        <h3 data-mc-conditions="Default.HelpScripting"><a name="var"></a>Переменные контекста и их значения</h3>
        <p>Глобальные переменные контекста:</p>
        <ul>
            <li value="1">
                <p><b>user</b> — пользователь, инициализировавший событие. Является объектом класса <span class="BaseСотрудник">(Undefined variable: Base.Сотрудник)</span>). </p>
                <p>Если событие инициализировал суперпользователь, 
					то user=null. </p>
                <p>Если событие инициализировано скриптом (скриптовое действие по событию, скрипт на вход в статус), то переменная user берется из контекста инициировавшего его скрипта. </p>
                <p>Пример: пользователь выполнил изменение атрибута --&gt; произошло изменение статуса объекта (действие по событию) --&gt; произошло изменение ответственного (действие на вход в статус) --&gt; произошло оповещение (действие по событию) .Во всех скриптах этой цепочки переменная user должна содержать сторудника, выполнившего первоначальное изменение атрибута.                        </p>
            </li>
            <li value="2"><b>ip</b> — ip пользователя user.</li>
            <li value="3"><b>api</b> — содержит доступные вспомогательные методы. Например api.utils, api.ldap, api.timing,....</li>
            <li value="4"><b>modules</b> — содержит доступные модули, загруженные в интерфейсе технолога (набор библиотек написанных на groovy).</li>
            <li value="5"><b>appVersion</b> — версия приложения.</li>
            <li value="6"><b>logger</b> — объект консоли (для логирования), используется только при выполнении скриптов через консоль.</li>
            <li value="7"><b>utils</b> — Синоним api.utils.</li>
        </ul>
        <p>&#160;</p>
        <ul>
            <li value="1"><b>initialValues</b> — набор значений, которые будут доступны на форме добавления объекта. Скрипт исходя из initialValues вернет true  (есть право) или false (нет&#160;права). В матрице прав нужно использовать следующий механизм получения данных из initialValues: initialValues.getProperties().get('PropertyCode').</li>
            <li value="2"><b>subject</b> — объект, для которого проверяются права
(сотрудник, отдел, команда).</li>
            <li value="3" data-mc-conditions="Default.443"><b>oldSubject</b> — объект до выполнения редактирования, для которого проверяется право. Во всех случаях, кроме непосредственно редактирования, данная переменная равна null. Данная переменная может быть использована только для пользовательских атрибутов. </li>
            <li value="4">
                <p><b>sourceObject</b> — объект, относительно которого проверяется право (запрос, соглашение, сотрудник, отдел, команда и т.д).</p>
                <p>При редактировании объекта: sourceObject = null. При проверке прав комментариев и файлов: sourceObject = null (этом случае объект, к которому добавляется комментарий или файл, находится в subject).</p>
                <p>Примеры: При проверке права добавления объекта определенного типа в карточке компании: sourceObject — объект "компания" (root$101). При проверке права добавления объекта определенного типа в карточке объекта: sourceObject — объект, в карточке которого проверялась возможность добавления объектов. </p>
            </li>
            <li value="5"><b>user</b> — текущий сотрудник, пользователь. </li>
        </ul>
        <h3 data-mc-conditions="Default.HelpScripting"><a name="example"></a>Примеры скрипта</h3>
        <ol>
            <li value="1">
                <p>Cкрипт разрешает создавать запросы только с привязкой к объектам указанных типов.</p>
                <p class="listing">def ACCEPTED_TYPES= ['employee$management','employee$ITeng'];// Типы объектов(fqn), из которых можно добавить запрос. Можно указать сотрудников, отделы, команды.</p>
                <p class="listing">if(!sourceObject)</p>
                <p class="listing">{</p>
                <p class="listing">return true;</p>
                <p class="listing">}</p>
                <p class="listing">return ACCEPTED_TYPES.contains(sourceObject.metaClass.toString());</p>
            </li>
            <li value="2" data-mc-conditions="">
                <p>Скрипт дает право на просмотр карточки запроса, если последний находится в одном из указанных статусов .</p>
                <p class="listing">def STATES = ['registered','closed'] //коды статусов запроса. Когда запрос будет находиться в одном из этих статусов, скрипт будет возвращать true (давать права).</p>
                <p class="listing">//ОСНОВНОЙ БЛОК--------------------------------------------------------</p>
                <p class="listing">return (subject == null &amp;&amp; STATES.contains('registered')) || (subject != null &amp;&amp; STATES.contains(subject.state));</p>
            </li>
        </ol>
    </body>
</html>