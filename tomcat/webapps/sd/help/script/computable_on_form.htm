<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="ru-ru" xml:lang="ru-ru" class="no-feedback" data-mc-search-type="Stem" data-mc-help-system-file-name="HelpScripting.xml" data-mc-path-to-help-system="../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-toc-path="">
    <head>
        <meta charset="utf-8" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <style></style>
    </head>
    <body>
        <h1 data-mc-conditions="Default.HelpScripting">Скрипт вычисления значения при редактировании</h1>
        <h3 data-mc-conditions="Default.HelpScripting"><a name="description"></a>Описание скрипта</h3>
        <p class="one1">Скрипт предназначен для вычисления значений атрибутов объекта на различных формах в интерфейсе пользователя</p>
        <p class="Subtitle">Когда выполняется скрипт:</p>
        <p>Первый раз выполняется при сохранении атрибута. При этом значение контекстной переменной form равно null. При первом вычислении ожидается что скрипт вернет либо null, либо пустую коллекцию, либо коллекцию атрибутов объекта от которых зависит вычисление значения скрипта. Другие значения возвращать нельзя, поэтому в скрипте обязательно должна присутствовать обработка случая с form==null.</p>
        <p>При работе в интерфейсе пользователя скрипт выполняется:</p>
        <ul>
            <li value="1">при открытии форм добавления и редактирования (в том числе специальных форм смены статуса, ответственного и тд) с данным атрибутом;</li>
            <li value="2">при изменении значений атрибутов, от которых зависит значение текущего атрибута, т.е. коды которых указаны в коллекции ATTRS_FOR_UPDATE_ON_FORMS.</li>
        </ul>
        <p>Скрипт не&#160;выполняется на форме выполнения массовых операций, в случае если выбрано более одного объекта.
</p>
        <p class="Subtitle">Результат выполнения скрипта:</p>
        <p>Скрипт возвращает вычисленное значение атрибута на форме, которое зависит от типа атрибута..</p>
        <h3 data-mc-conditions="Default.HelpScripting"><a name="var"></a>Переменные контекста и их значения</h3>
        <p>Глобальные переменные контекста:</p>
        <ul>
            <li value="1"><b>user</b> — пользователь, инициализировавший событие. Является объектом класса <span class="BaseСотрудник">(Undefined variable: Base.Сотрудник)</span>). Если событие инициализировал суперпользователь, 
					то user=null. </li>
            <li value="2"><b>ip</b> — ip пользователя user.</li>
            <li value="3"><b>api</b> — содержит доступные вспомогательные методы. Например api.utils, api.ldap, api.timing,....</li>
            <li value="4"><b>modules</b> — содержит доступные модули, загруженные в интерфейсе технолога (набор библиотек написанных на groovy).</li>
            <li value="5"><b>appVersion</b> — версия приложения.</li>
            <li value="6"><b>logger</b> — объект консоли (для логирования), используется только при выполнении скриптов через консоль.</li>
            <li value="7"><b>utils</b> — Синоним api.utils.</li>
        </ul>
        <p class="Termin">Текущий объект — объект, добавление или редактирование которого производится.</p>
        <ul>
            <li value="1"><b>form</b> — значения полей формы, на которой присутствует атрибут с признаком "Вычисление значения при редактировании", в том числе текущее значение данного атрибута. Другими словами, эту переменную можно понимать как представление объекта на клиенте.</li>
            <li value="2"><b>subject</b> — значения атрибутов текущего объекта, которые были на момент открытия формы, в том числе значение атрибута с признаком "Вычисление значения при редактировании" на момент открытия формы. Другими словами, эту переменную можно понимать как представление объекта, хранящееся в данный момент в базе данных. На форме добавления объекта переменная равна null.</li>
            <li value="3"><b>attrCode</b> — код атрибута с признаком "Вычисление значения при редактировании";</li>
        </ul>
        <h3 data-mc-conditions="Default.HelpScripting"><a name="features"></a>Особенности скрипта</h3>
        <ul>
            <li value="1">Может быть задан только для редактируемых атрибутов. </li>
            <li value="2">Не&#160;задается для системных атрибутов "Тип объекта", "Контрагент", "Пароль", "Статус", "Соглашение", а также для счетчиков времени. </li>
            <li value="3">В качестве вычисляющих атрибутов могут быть указанны любые атрибуты объекта в т.ч. вычислимые на форме. Вычислимые атрибуты могут образовывать между собой сложные зависимости, определение порядка вычисления значений которых приложение берет на себя. Единственное ограничение заключается в недопустимости образование циклических зависимостей между вычислимыми атрибутами.</li>
        </ul>
        <p data-mc-conditions="">На форме добавления объекта скрипт вычисления значения при редактировании имеет более высокий приоритет, чем скрипт вычисления значения по&#160;умолчанию.</p>
        <p data-mc-conditions="">Если на момент сохранения формы поле атрибута с признаком "Вычисление значения при редактировании" на ней не&#160;отображается, то значение данного атрибута  остается таким же как было на момент открытия формы. </p>
        <p data-mc-conditions="">Для агрегирующих атрибутов возвращаемое значение может быть задано в следующих форматах:
</p>
        <ul>
            <li value="1" data-mc-conditions="">
    отдел;
</li>
            <li value="2" data-mc-conditions="">    команда;
</li>
            <li value="3" data-mc-conditions="">команда: сотрудник;    </li>
            <li value="4" data-mc-conditions="">отдел: сотрудник.       </li>
        </ul>
        <p data-mc-conditions="">Также значение агрегирующего атрибута можно вернуть в виде subject[%атрибут%] или form[%атрибут%], где %атрибут% — код агрегирующего атрибута. В этом случае система вернет сохраненное значение данного агрегирующего атрибута или его значение на форме соответственно. </p>
        <h3 data-mc-conditions="Default.HelpScripting"><a name="structure"></a>Структура скрипта</h3>
        <p class="listing">// 1. Установка списка кодов вычисляющих атрибутов (обозначены 'attrCode1', 'attrCode2', ...)</p>
        <p class="listing">def ATTRS_FOR_UPDATE_ON_FORMS = ['attr1', 'attr2', ...]</p>
        <p class="listing">if (form == null)</p>
        <p class="listing">{</p>
        <p class="listing">return ATTRS_FOR_UPDATE_ON_FORMS</p>
        <p class="listing">}</p>
        <p class="listing">// 2. Возврат значения атрибута, устанавливаемого на форме, в зависимости от значений вычисляющих атрибутов на форме, текущего значения атрибута на форме, текущего состояния объекта  (зависимость обозначена функцией 'f')</p>
        <p class="listing">return f(form.attr1, form.attr2, form[attrCode], subject.attr3, ...)</p>
        <h3 data-mc-conditions="Default.HelpScripting"><a name="example"></a>Примеры скрипта:</h3>
        <ol>
            <li value="1">
                <p>Скрипт при изменении статуса задачи с "Зарегистрирована"&#160;(registered) на "В работе"&#160;(inprogress) заполняет поле "Исполнитель" (типа "Агрегирующий атрибут "Сотрудник в рамках отдела") текущим пользователем в рамках его отдела:
</p>
                <p class="listing">if (form == null)</p>
                <p class="listing">{</p>
                <p class="listing">return ['state']</p>
                <p class="listing">}</p>
                <p class="listing">if ((subject.state == 'registered') &amp;&amp; (form.state == 'inprogress'))</p>
                <p class="listing">{</p>
                <p class="listing">return [user?.parent, user]</p>
                <p class="listing">}</p>
                <p class="listing">else</p>
                <p class="listing">{</p>
                <p class="listing">return subject[attrCode]</p>
                <p class="listing">}</p>
            </li>
            <li value="2">
                <p>Скрит заполняет описание задачи описанием шаблона (атрибут задачи с кодом "template"), выбранного на форме добавления задачи (код атрибута "Описание" у задачи и шаблона должен быть одинаковым):</p>
                <p class="listing">if (form == null)</p>
                <p class="listing">{</p>
                <p class="listing">return ['template']</p>
                <p class="listing">}</p>
                <p class="listing">if ((subject == null) &amp;&amp; (form.template != null))</p>
                <p class="listing">{</p>
                <p class="listing">return form.template[attrCode]</p>
                <p class="listing">}</p>
                <p class="listing">else</p>
                <p class="listing">{</p>
                <p class="listing">return form[attrCode]</p>
                <p class="listing">}</p>
            </li>
        </ol>
    </body>
</html>
