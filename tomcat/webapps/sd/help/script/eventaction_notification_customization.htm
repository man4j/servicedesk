<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="ru-ru" xml:lang="ru-ru" class="no-feedback" data-mc-search-type="Stem" data-mc-help-system-file-name="HelpScripting.xml" data-mc-path-to-help-system="../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-toc-path="">
    <head>
        <meta charset="utf-8" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <style></style>
    </head>
    <body>
        <h1 data-mc-conditions="Default.HelpScripting">Скрипт кастомизации оповещений</h1>
        <h3 data-mc-conditions="Default.HelpScripting"><a name="description"></a>Описание скрипта</h3>
        <p>Скрипт кастомизации уточняет параметры отправки оповещения или само отправляемое сообщение.</p>
        <p class="one1">С помощью скрипта кастомизации можно изменить следующие параметры:</p>
        <ul>
            <li value="1">
                <p> Параметры отправки оповещения: адрес и имя отправителя, адрес технической поддержки и т.д.</p>
            </li>
            <li value="2">
                <p>Получатели оповещения:</p>
                <ul style="list-style-type: circle;">
                    <li value="1">
                        <p>Список адресов-получателей оповещения. </p>
                    </li>
                    <li value="2">
                        <p>Список сотрудников-получателей оповещения.	</p>
                    </li>
                </ul>
            </li>
            <li value="3">
                <p>Получатели копии оповещения:</p>
                <ul style="list-style-type: circle;">
                    <li value="1">Список адресов-получателей копии оповещения.	</li>
                    <li value="2">Список сотрудников-получателей копии оповещения.	</li>
                </ul>
            </li>
            <li value="4">
                <p>Тема оповещения.	</p>
            </li>
            <li value="5">
                <p>Заголовок оповещения.	</p>
            </li>
            <li value="6">
                <p>Список файлов, прикрепляемых к&#160;оповещению.   	</p>
            </li>
        </ul>
        <p class="Subtitle">Когда выполняется скрипт:</p>
        <p>Cкрипт выполняется после проверки условий, перед выполнением отправки оповещения.</p>
        <p class="Subtitle">Результат выполнения скрипта:</p>
        <p>Нет возвращаемого значения. </p>
        <p>Можно положить в некоторые значения в ассоциативный массив, для последующего использования в теле оповещения. Например: notification.scriptParams['comm'] = "Это самый важный текст" .</p>
        <h3 data-mc-conditions="Default.HelpScripting"><a name="var"></a>Переменные контекста и их значения</h3>
        <p>Глобальные переменные контекста:</p>
        <ul>
            <li value="1">
                <p><b>user</b> — пользователь, инициализировавший событие. Является объектом класса <span class="BaseСотрудник">"Сотрудник"&#160;(employee)</span>). </p>
                <p>Если событие инициализировал суперпользователь, 
					то user=null. </p>
                <p>Если событие инициализировано скриптом (скриптовое действие по событию, скрипт на вход в статус), то переменная user берется из контекста инициировавшего его скрипта. </p>
                <p>Пример: пользователь выполнил изменение атрибута --&gt; произошло изменение статуса объекта (действие по событию) --&gt; произошло изменение ответственного (действие на вход в статус) --&gt; произошло оповещение (действие по событию) .Во всех скриптах этой цепочки переменная user должна содержать сторудника, выполнившего первоначальное изменение атрибута.                        </p>
            </li>
            <li value="2"><b>ip</b> — ip пользователя user.</li>
            <li value="3"><b>api</b> — содержит доступные вспомогательные методы. Например api.utils, api.ldap, api.timing,....</li>
            <li value="4"><b>modules</b> — содержит доступные модули, загруженные в интерфейсе технолога (набор библиотек написанных на groovy).</li>
            <li value="5"><b>appVersion</b> — версия приложения.</li>
            <li value="6"><b>logger</b> — объект консоли (для логирования), используется только при выполнении скриптов через консоль.</li>
            <li value="7"><b>utils</b> — Синоним api.utils.</li>
        </ul>
        <p>&#160;</p>
        <ul>
            <li value="1"><b>notification</b> — текущее оповещение, для которого выполняется настройка.</li>
            <li value="2"><b>subject</b> — текущий объект, над которым производится действие.</li>
            <li value="3"><b>oldSubject</b> — объект до выполнения события.</li>
        </ul>
        <p>Для использования переменных скрипта кастомизации в теле письма необходимо выполнить следующее:</p>
        <ul>
            <li value="1"> в скрипте кастомизации определить переменную, которая будет использоваться в&#160;теле письма:
				<p class="listing">notification.scriptParams['param']=123 //значение переменной может быть любым;</p></li>
            <li value="2">в теле письма для получения значения переменной из скрипта кастомизации использовать конструкцию:<p class="listing">${notification.scriptParams['param']}</p></li>
        </ul>
        <h3 data-mc-conditions="Default.HelpScripting"><a name="features"></a>Особенности скрипта</h3>
        <ul>
            <li value="1">Текст оповещения через notificaion изменять не&#160;допускается.</li>
            <li value="2">Скрипт кастомизации оповещения доступен, если действие по событию — отправка оповещения.</li>
            <li value="3">Сначала выполняется скрипт, затем генерируется текст оповещения!</li>
        </ul>
        <h3 data-mc-conditions="Default.HelpScripting"><a name="example"></a>Примеры скрипта</h3>
        <ol>
            <li value="1">
                <p> Изменение параметров отправки оповещения: адрес и имя отправителя, адрес технической поддержки и т.д.</p>
                <p class="listing">def parameters = notification.parameters;</p>
                <p class="listing">parameters.from = 'sample@company.com'; // адрес отправителя на 'sample@company.com'</p>
                <p class="listing">parameters.name = 'Иванов Иван Иванович'; // имя отправителя на 'Иванов Иван Иванович'</p>
                <p class="listing">parameters.feedbackAddress = 'feedback@company.com'; // адрес электронной почты, на который будут автоматически отсылаться сообщения о серверных ошибках</p>
                <p class="listing">// Следующие значения являются значениями по умолчанию</p>
                <p class="listing">parameters.characterEncoding = 'UTF-8'; // кодировка текста</p>
                <p class="listing">parameters.transliterateSubject = false; // транслитерация заголовков писем</p>
            </li>
            <li value="2">
                <p>Изменение списка адресов-получателей оповещения. </p>
                <p>notification.to — представляет собой реализацию интерфейса java.lang.Map, в&#160;качестве ключей фигурируют адреса электронной почты, в&#160;качестве значений имена адресатов.</p>
                <p>notification.to['name@company.com'] = 'Title'; // позволяет изменять или добавлять адресатов</p>
                <p>notification.to.remove('name@company.com'); // позволяет удалить электронный адрес из списка получателей оповещения</p>
                <p class="comment">Если адрес электронной почты  используется для подключения к серверу входящей почты, то оповещение на данный адрес не&#160;отправляется.</p>
            </li>
            <li value="3">
                <p>Изменение списка сотрудников-получателей оповещения.	</p>
                <p class="listing">notification.toEmployee &lt;&lt; empl; // добавляет одного сотрудника в получатели</p>
                <p>При использовании переменной currentRecipient, добавленный сотрудник так же будет возвращаться с помощью данной глобальной переменной.</p>
            </li>
            <li value="4">
                <p data-mc-conditions="">Изменение списка адресов-получателей копии оповещения.	</p>
                <p data-mc-conditions="">notification.сс — представляет собой реализацию интерфейса java.lang.Map, в качестве ключей фигурируют адреса электронной почты, в качестве значений имена адресатов</p>
                <p class="listing" data-mc-conditions="">notification.сс['name@company.com'] = 'Title'; // позволяет изменять или добавлять адресатов копий оповещения</p>
                <p class="listing" data-mc-conditions="">notification.сс.remove('name@company.com');  // позволяет удалить электронный адрес из списка получателей копии оповещения</p>
                <p class="note" data-mc-conditions="">В настройках одного оповещения не&#160;допускается одновременное использование методов notification.сс, notification.ссEmployee и переменной currentRecipient. При сохранении настроек оповещения будет выведено сообщение об ошибке.</p>
            </li>
            <li value="5">
                <p>Изменение списка сотрудников-получателей копии оповещения:</p>
                <p class="listing" data-mc-conditions="">notification.ссEmployee &lt;&lt; empl; // добавляет одного сотрудника в получатели копии оповещения</p>
            </li>
            <li value="6">
                <p>Изменение темы оповещения.	</p>
                <p class="listing">notification.subject = 'Пример темы оповещения'; // заменит тему оповещения на 'Пример темы оповещения'</p>
                <p class="listing">notification.subject = 'Метка: ' + notification.subject; // добавит метку в начало
				 темы оповещения</p>
            </li>
            <li value="7">
                <p>Добавление и изменение заголовка оповещения:	</p>
                <p class="listing" data-mc-conditions="">notification.setHeader('In-Reply-To', '52D635DD.90108@company.com')'</p>
                <p>где:</p>
                <ul>
                    <li value="1">'In-Reply-To' (headerName) — название заголовка. </li>
                    <li value="2">'52D635DD.90108@company.com' (headerValue) — значение указанного заголовка</li>
                </ul>
            </li>
            <li value="8">
                <p>Список файлов, прикрепляемых к&#160;оповещению. </p>
                <p class="listing">def files = utils.files(subject)</p>
                <p class="listing">notification.attachments.addAll(files)</p>
            </li>
            <li value="9">
                <p>notification.scriptParams — ассоциативный массив для сохранения значений, которые будут использоваться в теле оповещения. </p>
                <p class="listing">notification.scriptParams['comm'] = "Это самый важный текст"</p>
                <p>Использование в тексте оповещения или теме:</p>
                <p class="listing">${notification.scriptParams['comm']}</p>
            </li>
        </ol>
    </body>
</html>
