<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="ru-ru" xml:lang="ru-ru" class="no-feedback" data-mc-search-type="Stem" data-mc-help-system-file-name="HelpScripting.xml" data-mc-path-to-help-system="../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-toc-path="">
    <head>
        <meta charset="utf-8" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <style></style>
    </head>
    <body>
        <h1 data-mc-conditions="Default.HelpScripting">Скрипт фильтрации статусов</h1>
        <h3 data-mc-conditions="Default.HelpScripting"><a name="description"></a>Описание скрипта</h3>
        <p class="one1">Скрипт  фильтрации определяет список возможных значений атрибута типа "Статус". Скрипт предназначен  для визуального ограничения набора статусов, в которые можно перевести объект из текущего на форме "Изменение статуса". .</p>
        <p class="Subtitle">Когда выполняется скрипт:</p>
        <ul>
            <li value="1">При открытии формы смены статуса.</li>
        </ul>
        <p class="Subtitle">Результат выполнения скрипта:</p>
        <p>Скрипт возвращает список кодов статусов, в которые будет возможен переход.</p>
        <h3 data-mc-conditions="Default.HelpScripting"><a name="var"></a>Переменные контекста и их значения</h3>
        <p>Глобальные переменные контекста:</p>
        <ul>
            <li value="1">
                <p><b>user</b> — пользователь, инициализировавший событие. Является объектом класса <span class="BaseСотрудник">(Undefined variable: Base.Сотрудник)</span>). </p>
                <p>Если событие инициализировал суперпользователь, 
					то user=null. </p>
                <p>Если событие инициализировано скриптом (скриптовое действие по событию, скрипт на вход в статус), то переменная user берется из контекста инициировавшего его скрипта. </p>
                <p>Пример: пользователь выполнил изменение атрибута --&gt; произошло изменение статуса объекта (действие по событию) --&gt; произошло изменение ответственного (действие на вход в статус) --&gt; произошло оповещение (действие по событию) .Во всех скриптах этой цепочки переменная user должна содержать сторудника, выполнившего первоначальное изменение атрибута.                        </p>
            </li>
            <li value="2"><b>ip</b> — ip пользователя user.</li>
            <li value="3"><b>api</b> — содержит доступные вспомогательные методы. Например api.utils, api.ldap, api.timing,....</li>
            <li value="4"><b>modules</b> — содержит доступные модули, загруженные в интерфейсе технолога (набор библиотек написанных на groovy).</li>
            <li value="5"><b>appVersion</b> — версия приложения.</li>
            <li value="6"><b>logger</b> — объект консоли (для логирования), используется только при выполнении скриптов через консоль.</li>
            <li value="7"><b>utils</b> — Синоним api.utils.</li>
        </ul>
        <p>&#160;</p>
        <ul>
            <li value="1">
                <p><b>subject</b> — владелец атрибута.</p>
                <p>Переменная может использоваться во всех скриптах фильтрации, включая скрипты на форме добавления (subject не null). Если скрипт используется на форме добавления, то в переменной subject содержится только набор определяющих фильтрацию атрибутов.</p>
            </li>
            <li value="2">
                <p><b>possibleStates</b> — список кодов статусов, в которые возможен переход из текущего статуса объекта согласно матрице переходов. </p>
                <p>Набор статусов, на который накладывается фильтр, формируется из статусов, разрешенных для перехода из текущего согласно матрице переходов. </p>
            </li>
        </ul>
        <h3 data-mc-conditions="Default.HelpScripting"><a name="features"></a>Особенности скрипта</h3>
        <ul>
            <li value="1">
    Данная настройка не влияет на кнопки быстрой смены статусов.</li>
            <li value="2">
    Условия фильтрации могут зависеть от значений других атрибутов, расположенных на форме изменения статуса.
</li>
        </ul>
        <h3 data-mc-conditions="Default.HelpScripting"><a name="example"></a>Примеры скрипта</h3>
        <ol>
            <li value="1" data-mc-conditions="">
                <p>Скрипт возвращает все возможные статусы, если список категорий запроса непуст, иначе возвращает пустой список статусов:</p>
                <p class="listing">// если subject null необходимо вернуть список кодов определяющих атрибутов на форме</p>
                <p class="listing">if(null == subject)</p>
                <p class="listing">{</p>
                <p class="listing">return ['categories'];</p>
                <p class="listing">}</p>
                <p class="listing">if(!initialValues.categories.isEmpty())</p>
                <p class="listing">{</p>
                <p class="listing">return possibleStates;</p>
                <p class="listing">}</p>
            </li>
            <li value="2" data-mc-conditions="">
                <p>Скрипт возвращает все возможные статусы, кроме статуса resolved:</p>
                <p class="listing">if(null == subject)</p>
                <p class="listing">{</p>
                <p class="listing">return ['attrCode'];</p>
                <p class="listing">}</p>
                <p class="listing">else</p>
                <p class="listing">{</p>
                <p class="listing">def states = [].plus(possibleStates);</p>
                <p class="listing">states.remove('resolved');</p>
                <p class="listing">return states;</p>
                <p class="listing">}</p>
            </li>
        </ol>
    </body>
</html>
