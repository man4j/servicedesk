#$Id$
log4j.rootLogger=WARN, stdout, FILE

log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.layout=ru.naumen.core.server.Log4jLayout

# \u0412\u0430\u0440\u0438\u0430\u043d\u0442\u044b \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u043b\u043e\u0433\u0433\u0435\u0440\u0430

# \u041f\u0440\u043e\u0441\u0442\u043e\u0439 \u0430\u043f\u043f\u0435\u043d\u0434\u0435\u0440
#log4j.appender.FILE=org.apache.log4j.FileAppender

# \u041c\u0435\u043d\u044f\u0435\u0442 \u0444\u0430\u0439\u043b \u043f\u043e \u043f\u0440\u0435\u0432\u044b\u0448\u0435\u043d\u0438\u044e \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0433\u043e \u0440\u0430\u0437\u043c\u0435\u0440\u0430
#log4j.appender.FILE=org.apache.log4j.RollingFileAppender
#log4j.appender.FILE.MaxFileSize=20MB
#log4j.appender.FILE.MaxBackupIndex=0

# \u041c\u0435\u043d\u044f\u0435\u0442 \u0444\u0430\u0439\u043b \u043f\u0435\u0440\u0438\u043e\u0434\u0438\u0447\u0435\u0441\u043a\u0438 \u043f\u043e \u0432\u0440\u0435\u043c\u0435\u043d\u0438 (\u0437\u0430\u0432\u0438\u0441\u0438\u0442 \u043e\u0442 datePattern)
log4j.appender.FILE=org.apache.log4j.DailyRollingFileAppender
log4j.appender.FILE.datePattern='.'yyyy-MM-dd

# \u041e\u0431\u0449\u0438\u0435 \u0434\u043b\u044f \u0432\u0441\u0435\u0445 \u0430\u043f\u043f\u0435\u043d\u0434\u0435\u0440\u043e\u0432 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438
log4j.appender.FILE.file=${user.home}/.naumen/sd/log/sdng${naumen.cluster.node}.log
log4j.appender.FILE.append=true
log4j.appender.FILE.encoding=utf-8
log4j.appender.FILE.layout=ru.naumen.core.server.Log4jLayout

# LOGGLY APPENDER
#log4j.appender.loggly=com.spidertracks.loggly.LogglyAppender
#log4j.appender.loggly.dirName=/tmp
#log4j.appender.loggly.logglyUrl=https://logs-01.loggly.com/inputs/<authentication-token>
#log4j.appender.loggly.logglyTags=myApplication1,javaApplication
#log4j.appender.loggly.batchSize=10
#log4j.appender.loggly.layout=ru.naumen.core.server.Log4jLayout

# Default log level for Naumen classes
log4j.category.ru.naumen=INFO

# \u041b\u043e\u0433\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u043f\u043e\u0442\u043e\u043a\u043e\u0432, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043d\u0435 \u0431\u044b\u043b\u0438 \u0437\u0430\u043a\u0440\u044b\u0442\u044b \u0434\u043e \u043c\u043e\u043c\u0435\u043d\u0442\u0430 \u0441\u0431\u043e\u0440\u0430 \u043c\u0443\u0441\u043e\u0440\u0430
#log4j.appender.UNCL_STREAMS=org.apache.log4j.DailyRollingFileAppender
#log4j.appender.UNCL_STREAMS.datePattern='.'yyyy-MM-dd
#log4j.appender.UNCL_STREAMS.file=${user.home}/.naumen/sd/log/unclosed_streams${naumen.cluster.node}.log
#log4j.appender.UNCL_STREAMS.append=true
#log4j.appender.UNCL_STREAMS.encoding=utf-8
#log4j.appender.UNCL_STREAMS.layout=ru.naumen.core.server.Log4jLayout
#log4j.category.ru.naumen.core.server.upload.InputStreamWithLogger=DEBUG,UNCL_STREAMS

#log4j.category.ru.naumen.bcp=DEBUG
#log4j.category.ru.naumen.common.server.utils.DependencySorter=DEBUG
#log4j.category.ru.naumen.core.server.bo.bop.ExecuteStateActionsOperation=DEBUG
#log4j.category.ru.naumen.core.server.timer.bcp.AbstractTimerCalculationOperation=DEBUG
#log4j.category.ru.naumen.core.server.hquery=DEBUG
#log4j.category.ru.naumen.core.server.dispatch=INFO
#log4j.category.ru.naumen.core.server.eventaction=DEBUG

#Scripts
log4j.category.ru.naumen.core.shared.Script=ALL


# JSP compiler logging
log4j.category.org.apache.jasper.compiler=ALL

# Spring
log4j.category.org.springframework=INFO

# Flyway
log4j.category.com.googlecode.flyway=INFO

# Hibernate debugging & low-level activity
# Log everything. This is a lot of information but it is useful for troubleshooting
#log4j.category.org.hibernate=INFO
# Log all SQL DML statements as they are executed
#log4j.category.org.hibernate.SQL=INFO
# Log all JDBC parameters   
#log4j.category.org.hibernate.type=INFO
# Log all SQL DDL statements as they are executed
#log4j.category.org.hibernate.tool.hbm2ddl=INFO
# Log the state of all entities (max 20 entities) associated with the session at flush time
#log4j.category.org.hibernate.pretty=INFO
# Log all second-level cache activity ALL for debug
log4j.category.org.hibernate.cache=ERROR
# Log transaction related activity
#log4j.category.org.hibernate.transaction=INFO
# Log all JDBC resource acquisition
#log4j.category.org.hibernate.jdbc=INFO
# Log HQL and SQL ASTs during query parsing
#log4j.category.org.hibernate.hql.internal.ast.AST=INFO
# Log all JAAS authorization requests
#log4j.category.org.hibernate.secure=INFO

# \u0414\u043b\u044f \u043b\u043e\u0433\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0439, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0437\u0430\u043f\u0438\u0441\u044b\u0432\u0430\u044e\u0442\u0441\u044f \u0432 Infinispan
#log4j.category.org.infinispan.transaction.LocalTransaction=TRACE,INFSPN
#log4j.appender.INFSPN=org.apache.log4j.DailyRollingFileAppender
#log4j.appender.INFSPN.datePattern='.'yyyy-MM-dd
#log4j.appender.INFSPN.file=${user.home}/.naumen/sd/log/infnspn${naumen.cluster.node}.log
#log4j.appender.INFSPN.append=true
#log4j.appender.INFSPN.encoding=utf-8
#log4j.appender.INFSPN.layout=ru.naumen.core.server.Log4jLayout
#log4j.additivity.org.infinispan.transaction.LocalTransaction=false

# JGropus logging
log4j.category.org.jgroups=ERROR
log4j.category.ru.naumen.core.server.cluster.synchronization=ALL
# \u041b\u043e\u0433\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 Groovy HTTP Builder
log4j.category.groovyx.net.http.HTTPBuilder=ERROR
log4j.category.org.springframework.beans.factory.support=WARN
log4j.category.ru.naumen.sec.server.saml2=OFF


###CLUSTER UDP LOG
####log4j.rootLogger=WARN, stdout, FILE, CLUSTER
#log4j.appender.CLUSTER=ru.naumen.core.server.cluster.logger.appender.ClusterUDPAppender
#log4j.category.io.netty=WARN
#log4j.additivity.ru.naumen.core.server.cluster.logger.listener.NettyListenerHandler=false
#log4j.category.ru.naumen.core.server.cluster.logger.listener.NettyListenerHandler=ALL, CLUSTER_STORE
#log4j.appender.CLUSTER_STORE=org.apache.log4j.DailyRollingFileAppender
#log4j.appender.CLUSTER_STORE.datePattern='.'yyyy-MM-dd
#log4j.appender.CLUSTER_STORE.file=${user.home}/.naumen/sd/log1/cluster.log
#log4j.appender.CLUSTER_STORE.append=true
#log4j.appender.CLUSTER_STORE.encoding=utf-8
#log4j.appender.CLUSTER_STORE.layout=ru.naumen.core.server.cluster.logger.ClusterLog4jLayout
